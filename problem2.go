/*

Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

package main

import fmt "fmt"

func fibonacci(out chan int) {
	first := 1;
	second := 2;
	for {
		out <- first;
		third := first + second;
		first = second;
		second = third;
	}
}

func main() {
	total := 0

	fibonacci_sequence := make(chan int)

	go fibonacci(fibonacci_sequence)

	for i := <-fibonacci_sequence; i < 4000000; i = <-fibonacci_sequence {
		if (i % 2 == 0) {
			total += i
		}
	}

	fmt.Printf("%v\n", total)
}
